:root {
  font-family: "Micro 5", sans-serif;
  font-weight: 400;
  font-style: normal;
  font-size: 2em;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 10px 20px;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

/*
React Popup
*/

.popup-content {
  margin: auto;
  border-radius: 8px;
  padding: 5px;
}
.popup-arrow {
  color: rgb(255, 255, 255);
}
[role='tooltip'].popup-content {
  width: 200px;
  box-shadow: rgba(0, 0, 0, 0.16) 0px 0px 3px;
}

.popup-overlay {
  background: rgba(0, 0, 0, 0.5);
}
[data-popup='tooltip'].popup-overlay {
  background: transparent;
}

.modal {
  background-color: #242424;
  padding: 10px;
  text-align: center;
}

.modal > .header {
  width: 100%;
  font-size: 2em;
  text-align: center;
  padding: 10px;
}
.modal > .content {
  width: 100%;
  padding: 10px 5px;
}
.modal > form {
  display: grid;
  width: 100%;
  gap: 5px;
  margin: auto;
  text-align: center;
}

.modal > form > input {
  border-radius: 8px;
}

.modal > .close {
  cursor: pointer;
  position: absolute;
  display: block;
  padding: 2px 5px;
  line-height: 20px;
  right: -10px;
  top: -10px;
  font-size: 24px;
  background: #ffffff;
  border-radius: 18px;
  border: 1px solid #cfcece;
}

.modal > #error-message {
  color: rgb(214, 27, 27);
}

.w-100 {
  width: 100%;
}

input {
  font-size: 1em;
  font-family: "Micro 5", sans-serif;
  font-weight: 400;
  font-style: normal;
}

/*
Game
*/

h1, h2 {
  margin: 0;
}

.game {
  margin: 0;
  height: 100vh; 
  display: flex;
  justify-content: end; 
  background-color: #a3b7ea; 
  --block-border-width: 0.18em;
}

.game-board-container {
  min-width: 4em;
  display: grid;
  grid-template-rows: repeat(3, 0.1fr);
  margin: 0 1em;
}

.game-grid-container {
  display: flex;
}


.game-grid {
  display: grid;
  grid-template-rows: repeat(20, 1em); 
  grid-template-columns: repeat(10, 1em); 
  gap: 2px; 
  margin: 0.4em 0;
  padding: 0.4em 0.4em;
  background-color: #444; 
  box-shadow: rgba(0, 0, 0, 0.33)  3px 3px;
  grid-auto-rows: min-content;
}

.game-grid-bar-container {
  display: flex;
  margin: 0.4em 0;
  padding: 0.4em 0.4em;
  padding-right: 0;
  background-color: #444; 
  box-shadow: rgba(0, 0, 0, 0.33)  3px 3px;
}

.game-grid-bar {
  display: flex;
  align-items: end;
  padding: 0.1em 0.1em;
  background-color: #a1a1a1; 
}

.game-grid-bar-progress{
  padding: 0 0.2em;
  background-color: #cf3636; 
  height: 0%;
}

.game-board {
  display: grid;
  justify-items: center;
}

.player {
  display: flex;
  flex-direction: column;
  justify-content: center;
  margin: 1em
}

.cell {
  background-color: #222;
}

.filled {
  border-left: var(--block-border-width) solid rgba(255, 255, 255, .3);
  border-top: var(--block-border-width) solid rgba(255, 255, 255, .3);
  border-right: var(--block-border-width) solid rgba(0, 0, 0, .3);
  border-bottom: var(--block-border-width) solid rgba(0, 0, 0, .3);
}


.opponent > .game-grid {
  font-size: 0.3em;
  gap: 1px; 
}

.opponent h2 {
  margin-bottom: 0;
}

.i {
  background-color: #00ffff;
}
.j {
  background-color: #0000ff;
}
.t {
  background-color: #800080;
}
.o {
  background-color: #ffff00;
}
.l {
  background-color: #ff7f00;
}
.s {
  background-color: #00ff00;
}
.z {
  background-color: #ff0000;
}
.g {
  background-color: #989898;
}

.name {
  text-align: center;
  color:black;

}

/*
Leaderboard
*/

.leaderboard-container {
  width: 30%;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0 10px;
  margin-top: 100px;
}

#timerDisplay {
  width: -webkit-fill-available;
  color: white;
  background: rgba(0, 0, 0, 0.5); 
  padding: 5px 10px;
  text-align: center; 
}

.leaderboard {
  width: -webkit-fill-available;
  border-radius: 8px;
  display: grid;
  background-color: #242424;
  padding: 10px 20px;
  gap: 10px;
  margin-top: 10px;
}

.leaderboard p {
  margin: 0;
}

.score-container {
  display: flex;
  background-color: #606060;
  padding: 5px 15px;
  border-radius: 8px;
}

.score-container{
  margin: 0;
}

.user-score {
  text-align: center;
}

.user-name{
  margin-left: auto;
}

.kanit-medium {
  font-family: "Kanit", sans-serif;
  font-weight: 500;
  font-style: normal;
}

.kanit-regular {
  font-family: "Kanit", sans-serif;
  font-weight: 400;
  font-style: normal;
}

.micro-5-regular {
  font-family: "Micro 5", sans-serif;
  font-weight: 400;
  font-style: normal;
}

.pixel-corners,
.pixel-corners--wrapper {
  clip-path: polygon(0px calc(100% - 8px),
    4px calc(100% - 8px),
    4px calc(100% - 4px),
    8px calc(100% - 4px),
    8px 100%,
    calc(100% - 8px) 100%,
    calc(100% - 8px) calc(100% - 4px),
    calc(100% - 4px) calc(100% - 4px),
    calc(100% - 4px) calc(100% - 8px),
    100% calc(100% - 8px),
    100% 8px,
    calc(100% - 4px) 8px,
    calc(100% - 4px) 4px,
    calc(100% - 8px) 4px,
    calc(100% - 8px) 0px,
    8px 0px,
    8px 4px,
    4px 4px,
    4px 8px,
    0px 8px);
  position: relative;
}
.pixel-corners {
  border: 4px solid transparent;
}
.pixel-corners--wrapper {
  width: fit-content;
  height: fit-content;
}
.pixel-corners--wrapper .pixel-corners {
  display: block;
  clip-path: polygon(4px 8px,
    8px 8px,
    8px 4px,
    calc(100% - 8px) 4px,
    calc(100% - 8px) 8px,
    calc(100% - 4px) 8px,
    calc(100% - 4px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 4px),
    8px calc(100% - 4px),
    8px calc(100% - 8px),
    4px calc(100% - 8px));
}
.pixel-corners::after,
.pixel-corners--wrapper::after {
  content: "";
  position: absolute;
  clip-path: polygon(0px calc(100% - 8px),
    4px calc(100% - 8px),
    4px calc(100% - 4px),
    8px calc(100% - 4px),
    8px 100%,
    calc(100% - 8px) 100%,
    calc(100% - 8px) calc(100% - 4px),
    calc(100% - 4px) calc(100% - 4px),
    calc(100% - 4px) calc(100% - 8px),
    100% calc(100% - 8px),
    100% 8px,
    calc(100% - 4px) 8px,
    calc(100% - 4px) 4px,
    calc(100% - 8px) 4px,
    calc(100% - 8px) 0px,
    8px 0px,
    8px 4px,
    4px 4px,
    4px 8px,
    0px 8px,
    0px 50%,
    4px 50%,
    4px 8px,
    8px 8px,
    8px 4px,
    calc(100% - 8px) 4px,
    calc(100% - 8px) 8px,
    calc(100% - 4px) 8px,
    calc(100% - 4px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 4px),
    8px calc(100% - 4px),
    8px calc(100% - 8px),
    4px calc(100% - 8px),
    4px 50%,
    0px 50%);
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: #444;
  display: block;
  pointer-events: none;
}
.pixel-corners::after {
  margin: -4px;
}

/*
Menu
*/

.game-menu {
  position: fixed;  
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);  
  
  width: 300px;
  padding: 20px;
  background: rgba(0, 0, 0, 0.8); 
  color: white;
  text-align: center;
  border-radius: 10px;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
  
  display: flex;
  flex-direction: column;
  gap: 10px;

  visibility: hidden;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease-in-out;
}

.game-over-screen {
  visibility: visible;
  opacity: 1;
  pointer-events: auto;
}